0.	이클립스 단축키
	Ctrl + / => 주석 설정
	Ctrl + Shift + i => 자동 Import
	Ctrl + shift + f => 코드 정리
	Ctrl + d = > 라인삭제



1.	변수
	데이터타입 변수명 = 변수에 저장될 값;
	
	ex) 숫자를 저장할 수 있는 num변수를 정의하고 100을 저장하게 한다
	int num = 100;
	     ^    ---
		 |_____|
		 	num 변수에 100이 할당(대입)

2.	데이터타입
	기본형과 참조형으로 분류한다.
	1) 기본형
		-값이 저장된다.
		-변수에 할당되는 값을 리터럴이라고 한다.
		-정수형변수에 저장되는 리터럴은 기본 데이터 타입이 int형
		-실수형변수에 저장되는 리터럴은 기본 데이터 타입이 double형
		-int형 변수의 연산은 결과도 int
		-long타입은 리터럴로 표현할 수 있는 범위 밖의 값을 저장해야 하므로 접미사를 추가한다. (L or l)
		-float타입도 접미사를 추가한다. (F or f)
		-char타입의 변수에 할당되는 리터럴은 ' '로 표현한다.
		
		정수형
			-byte		1바이트	
			-short		2바이트	
			-int		4바이트	
			-long		8바이트	
			
		실수형
			-float		4바이트	
			-double		8바이트	
			
		논리형
			-boolean	1바이트	
			
		문자형
			-char		2바이트	
			
			
	2) 참조형
		- API클래스나 직접 작성한 클래스를 메모리에 할당한 후 사용하기 위해서 선언한 변수
		- 주소값을 가지고 있다.
		- new연산자를 이용해서 클래스를 메모리에 저장 (객체생성 , 인스턴스화)
		- 힙에 할당된 클래스를 객체, 인스턴스라 한다.
		- 생성된 객체의 주소를 갖고 있는 변수를 이용해서 객체의 기능을 사용 (객체 참조)
		- . 연산자를 통해 접근
		
		
		
	3) 데이터 형 변환
		1) 기본형
			
			1. 자동형변환
				- 작은 데이터를 큰 데이터타입에 변수에 저장할 수 있다.
				byte -> short -> int -> long -> float -> double
						char -> int
			2. 명시적형변환(강제형변환)
				- 강제로 데이터 타입변환
				- 사이즈가 큰 변수를 작은 변수에 할당할 수 없다.
				- 이런 경우 강제로 형변환
				타입 변수 = (변환할타입)변수;
			
			
		2) 참조형
		
		
		
	
4. 제어구문
	- 문장의 흐름에 따라서 순차형, 선택형, 반복형
	1) 조건제어문
		-if문
		-switch문
		
	2) 반복제어문
		-for
		-while
		-do ~ while
		
		
		
		
		
		
		
		
[객체의 형변환]