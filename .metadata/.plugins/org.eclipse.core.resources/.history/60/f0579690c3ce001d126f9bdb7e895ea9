package jdbc.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

//MySQL액세스 하기 위한 기능 - Customer테이블에 대한 CL(login)RUD를 정의
public class CustomerDAOImpl_JSON implements CustomerDAO {

	String url = "jdbc:mysql://localhost:3306/jdbc?serverTimezone=UTC";
	String user = "exam";
	String password = "exam";

	Connection conn = null;
	PreparedStatement ptmt = null;
	ResultSet rs = null;

	
	@Override
	public int insert(String id, String pass, String name, String addr, String memo) {
		String sql = "insert into customer values(?,?,?,?,sysdate(),1000,?)";
		int result = 0;
		
		try {
			setting(sql);
			// ? 에 값 전달해주기.
			ptmt.setString(1, id);
			ptmt.setString(2, pass);
			ptmt.setString(3, name);
			ptmt.setString(4, addr);
			ptmt.setString(5, memo);

			// 4. SQL문을 실행
			result = ptmt.executeUpdate();

			// 5. 결과 처리
			System.out.println(result);

		} catch (ClassNotFoundException e) {
			System.out.println("드라이버 로딩 실패");
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close();
		}
		
		return result;
	}

	@Override
	public int update(String id, int point, String pass) {
		String sql = "update customer set point = ?, pass=? where id = ?";
		int result = 0;
		
		try {
			setting(sql);
			
			ptmt.setInt(1, point);
			ptmt.setString(2, pass);
			ptmt.setString(3, id);

			result = ptmt.executeUpdate();
			System.out.println(result);
		} catch (ClassNotFoundException e) {
			System.out.println("driver loading failed.");
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close();
		}
		return result;
	}

	@Override
	public int delete(String id) {

		String sql = "delete from customer where id = ?";
		int result = 0;

		try {
			setting(sql);

			ptmt.setString(1, id);

			result = ptmt.executeUpdate();

			System.out.println(result);
		} catch (ClassNotFoundException e) {
			System.out.println("driver loading failed.");
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}finally {
			close();
		}
		return result;
	}

	@Override
	public int select(String addr) {
		String sql = "select * from customer where addr = ?";
		int result = 0;
		
		try {
			setting(sql);
			
			ptmt.setString(1, addr);
			rs = ptmt.executeQuery();

			while (rs.next()) {
				System.out.print(rs.getString(1) + "\t");
				System.out.print(rs.getString(2) + "\t");
				System.out.print(rs.getString(3) + "\t");
				System.out.print(rs.getString(4) + "\t");
				System.out.print(rs.getDate(5) + "\t");
				System.out.print(rs.getInt(6) + "\t");
				System.out.println(rs.getString(7) + "\t");
			}
		} catch (ClassNotFoundException e) {
			System.out.println("driver loading failed.");
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close();
		}
		return result;
	}

	@Override
	public int login(String id, String pass) {
		
		String sql = "select * from customer where id = ? and pass = ?";
		int result = 0;
		
		try {
			setting(sql);

			ptmt.setString(1, id);
			ptmt.setString(2, pass);

			ResultSet rs = ptmt.executeQuery();

			if (rs.next()) {
				System.out.printf("%s님 로그인 되었습니다.", rs.getString("id"));
			} else {
				System.out.println("일치하는 회원 정보가 없습니다.");
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			close();
		}

	}

	
//////////////////////////////////////////////////////////////////
	
	public void setting(String sql) throws SQLException, ClassNotFoundException {
		Class.forName("com.mysql.cj.jdbc.Driver");

		conn = DriverManager.getConnection(url, user, password);

		ptmt = conn.prepareStatement(sql);
	}

	public void close(){
		try {
			if(conn!=null) conn.close();
			if(ptmt!=null) ptmt.close();
			if(rs!=null) rs.close();
		}catch(SQLException e) {
			
		}
		
	}
	
//////////////////////////////////////////////////////////////////

}
