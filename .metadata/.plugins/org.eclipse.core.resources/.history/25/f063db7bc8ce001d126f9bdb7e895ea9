package jdbc.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

//MySQL액세스 하기 위한 기능 - Customer테이블에 대한 CL(login)RUD를 정의
public class CustomerDAOImpl implements CustomerDAO {

	String dbUrl = "jdbc:mysql://localhost:3306/jdbc?serverTimezone=UTC";
	String dbUser = "exam";
	String dbPassword = "exam";
	
	public CustomerDAOImpl() {
		
	}
	public CustomerDAOImpl(String dbUrl , String dbUser , String dbPassword) {
		this.dbUrl = dbUrl;
		this.dbUser = dbUser;
		this.dbPassword = dbPassword;
	}
	

	@Override
	public int insert(String id, String pass, String name, String addr, String memo) {
		String sql = "insert into customer values(?,?,?,?,sysdate(),1000,?)";
		int result = 0;
		
		Connection con = DBUtil.getConnect(dbUrl, dbUser, dbPassword);
		PreparedStatement ptmt = con.prepareStatement(sql);
		
		try {
			ptmt.setString(1, id);
			ptmt.setString(2, pass);
			ptmt.setString(3, name);
			ptmt.setString(4, addr);
			ptmt.setString(5, memo);
			result = ptmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
		}

		return result;
	}

	@Override
	public int update(String id, int point, String pass) {
		String sql = "update customer set point = ?, pass=? where id = ?";
		int result = 0;
		
		Connection con = DBUtil.getConnect(dbUrl, dbUser, dbPassword);
		PreparedStatement ptmt = con.prepareStatement(sql);

		try {

			ptmt.setInt(1, point);
			ptmt.setString(2, pass);
			ptmt.setString(3, id);

			result = ptmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
		}
		return result;
	}

	@Override
	public int delete(String id) {

		String sql = "delete from customer where id = ?";
		int result = 0;
		
		Connection con = DBUtil.getConnect(dbUrl, dbUser, dbPassword);
		PreparedStatement ptmt = con.prepareStatement(sql);

		try {
			ptmt.setString(1, id);

			result = ptmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
		}
		return result;
	}

	@Override
	public int select(String addr) {
		String sql = "select * from customer where addr = ?";
		int result = 0;

		try {
			
			Connection con = DBUtil.getConnect(dbUrl, dbUser, dbPassword);
			PreparedStatement ptmt = con.prepareStatement(sql);

			ptmt.setString(1, addr);
			ResultSet rs = ptmt.executeQuery();

			while (rs.next()) {
				System.out.print(rs.getString(1) + "\t");
				System.out.print(rs.getString(2) + "\t");
				System.out.print(rs.getString(3) + "\t");
				System.out.print(rs.getString(4) + "\t");
				System.out.print(rs.getDate(5) + "\t");
				System.out.print(rs.getInt(6) + "\t");
				System.out.println(rs.getString(7) + "\t");
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
		}
		return result;
	}

	@Override
	public int login(String id, String pass) {

		String sql = "select * from customer where id = ? and pass = ?";
		int result = 0;
		
		Connection con = DBUtil.getConnect(dbUrl, dbUser, dbPassword);
		PreparedStatement ptmt = con.prepareStatement(sql);

		try {

			ptmt.setString(1, id);
			ptmt.setString(2, pass);

			ResultSet rs = ptmt.executeQuery();

			if (rs.next()) {
				System.out.printf("%s님 로그인 되었습니다.", rs.getString("id"));
			} else {
				System.out.println("일치하는 회원 정보가 없습니다.");
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			close();
		}

		return result;

	}

//////////////////////////////////////////////////////////////////





//////////////////////////////////////////////////////////////////

}
